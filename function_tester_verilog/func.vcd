$date
	Fri Aug 21 18:47:56 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module _____00003aT0 $end
$var wire 8 ! a [7:0] $end
$var wire 8 " _00005e_0000601 [7:0] $end
$var wire 8 # _00005e_0000600 [7:0] $end
$var reg 8 $ z__value [7:0] $end
$scope module tanh $end
$var wire 6 % _00005e_00006012 [5:0] $end
$var wire 8 & _00005e_00006015 [7:0] $end
$var wire 8 ' _00005e_00006016 [7:0] $end
$var wire 8 ( _00005e_00006017 [7:0] $end
$var wire 8 ) a [7:0] $end
$var wire 8 * base [7:0] $end
$var wire 8 + next__data [7:0] $end
$var wire 8 , z__value [7:0] $end
$var wire 8 - remaining [7:0] $end
$var wire 6 . address [5:0] $end
$var wire 8 / _00005e_00006018 [7:0] $end
$var wire 8 0 _00005e_00006014 [7:0] $end
$var wire 8 1 _00005e_00006013 [7:0] $end
$scope module my__interpolator $end
$var wire 8 2 base [7:0] $end
$var wire 8 3 next__data [7:0] $end
$var wire 8 4 remaining [7:0] $end
$var wire 8 5 interpolated__value [7:0] $end
$upscope $end
$scope module my__lut $end
$var wire 6 6 address [5:0] $end
$var wire 8 7 base [7:0] $end
$var reg 8 8 next__data [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11 8
b0 7
b0 6
b0 5
b0 4
b11 3
b0 2
b0 1
b11 0
b0 /
b0 .
b0 -
b0 ,
b11 +
b0 *
b0 )
b11 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#10
b1111 (
b1111 3
b1111 +
b1111 0
b1111 8
b1111 !
b1111 "
b1111 )
b1111 /
b1111 5
b1111 '
b1111 2
b1111 *
b1111 1
b1111 7
b11100 %
b11100 6
b11100 .
b1110000 #
b1110000 $
b1110000 ,
#20
b0 (
b0 3
b0 +
b0 0
b0 8
b11111101 !
b11111101 "
b11111101 )
b11111101 /
b11111101 5
b11111101 '
b11111101 2
b11111101 *
b11111101 1
b11111101 7
b111111 %
b111111 6
b111111 .
b11 &
b11 4
b11 -
b11111111 #
b11111111 $
b11111111 ,
#30
